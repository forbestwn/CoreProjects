nosliw.runtime.getProcessRuntimeFactory().createProcessRuntime().executeProcessRequest({"id":";expressionProcessId",
"startActivityId":"startActivityId",
"context":{"group":{"public":{"element":{"business":{"name":"",
"description":"",
"info":{},
"definition":{"type":"node",
"processed":"true",
"child":{"a":{"type":"node",
"processed":"true",
"child":{"aa":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
}
}
}
}
}
},
"defaultValue":{"a":{"aa":{"dataTypeId":"test.string;1.0.0","value":"This is my world!"}}}
},
"baseVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
}
},
"defaultValue":{"dataTypeId":"test.string","value":"This is my world!"}
},
"toVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.integer;1.0.0",
"info":{}
}
},
"defaultValue":{"dataTypeId":"test.integer;1.0.0","value":7}
},
"fromVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.integer;1.0.0",
"info":{}
}
},
"defaultValue":{"dataTypeId":"test.integer;1.0.0","value":3}
}
}
},
"protected":{"element":{"expressionResultVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"open",
"criteria":"test.string;1.0.0",
"info":{}
}
}
}
}
},
"internal":{"element":{}
},
"private":{"element":{}
}
},
"info":{}
},
"result":{"successEnd":{"type":"mapping",
"name":"",
"description":"",
"info":{},
"definition":{"name":"",
"description":"",
"info":{},
"association":{"default":{"element":{"output":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"expressionResultVar"
},
"parent":"default"
}
}
}
}
}
},
"output":{"default":true
},
"input":{"default":false
},
"association":{"default":{"context":{"element":{"output":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"true",
"path":{"rootEleName":"expressionResultVar___protected"
},
"parent":"default",
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"open",
"criteria":"test.string;1.0.0",
"info":{}
}
}
}
}
}
},
"pathMapping":{"output":"default.protected.expressionResultVar"
},
"flatOutput":true,
"flatInput":{"default":"false"
},
"convertFunction":function(input, utilFunction){

	var output = {};

/*	
	//build element from inherited first
	if(false){
		if({default=false} && true){
			_.each(input, function(ele, name){
				output[name] = ele;
			});
		}
		else if(!{default=false} && !true){
			_.each(input, function(context, categary){
				_.each(context, function(ele, name){
					output[name] = ele;
				});
			});
		}		
		else if(!{default=false} && true){
			_.each(input, function(context, categary){
				_.each(context, function(ele, name){
					output[name] = ele;
					output[name+"___"+categary] = ele;
				});
			});
		}		
		else if({default=false} && !true){
			_.each(input, function(ele, name){
				var segs = name.split("___");
				if(segs.length==2){
					var context = output[segs[1]];
					if(context==undefined){
						context = {};
						output[segs[1]] = context;
					}
					context[segs[0]] = ele;
				}
			});
		}		
	}
*/
	
	//build skeleton first
	if(true){
		_.each({
  "output": {}
}, function(value, name){
			output[name] = value;
		});
	}
	else{
		_.each({
  "output": {}
}, function(context, categary){
			var context1 = output[categary];
			if(context1==undefined){
				context1 = {};
				output[categary] = context1;
			} 
			_.each(context, function(ele, name){
				context1[name] = ele;
			});
		});
	}
	
	//asign mapped element, leaf data
	output = utilFunction(output, ["output"], input, ["default","protected","expressionResultVar"]);

	
	return output;
}

}
}
}
},
"activity":{"startActivityId":{"name":"startActivity",
"description":"",
"info":{},
"id":"startActivityId",
"type":"start",
"definition":{"name":"startActivity",
"description":"",
"info":{},
"type":"start",
"flow":{"target":"expressionActivityId"
}
},
"flow":{"target":"expressionActivityId"
}
},
"expressionActivityId":{"name":"expressionActivity",
"description":"",
"info":{},
"id":"expressionActivityId",
"type":"expression",
"definition":{"name":"expressionActivity",
"description":"",
"info":{},
"type":"expression",
"input":{"name":"",
"description":"",
"info":{},
"association":{"default":{"element":{"inputA.b.c":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"business",
"path":"a.aa"
},
"parent":"default"
}
},
"inputA.d.c":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"business",
"path":"a.aa"
},
"parent":"default"
}
},
"inputB":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"business",
"path":"a.aa"
},
"parent":"default"
}
},
"toVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"toVar"
},
"parent":"default"
}
},
"fromVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"fromVar"
},
"parent":"default"
}
}
}
}
}
},
"result":{"success":{"name":"success",
"description":"",
"info":{},
"flow":{"target":"successEndId"
},
"output":{"name":"",
"description":"",
"info":{},
"association":{"default":{"element":{"expressionResultVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"nosliw_output"
},
"parent":"default"
}
}
}
}
}
}
}
},
"expression":{"definition":"#|!(test.string)!.subString(?(inputA)?.b.c,from:?(fromVar)?,to:?(toVar)?)|#",
"elements":[{"expression":"!(test.string)!.subString(?(inputA)?.b.c,from:?(fromVar)?,to:?(toVar)?)",
"variableNames":["inputA","toVar","fromVar"],
"referenceNames":[],
"operand":{"type":"operation",
"operation":"subString",
"dataTypeId":"test.string;1.0.0",
"parms":{"from":{"type":"variable",
"variableName":"fromVar"
},
"to":{"type":"variable",
"variableName":"toVar"
},
"base":{"type":"attributeoperation",
"attribute":"c",
"baseData":{"type":"attributeoperation",
"attribute":"b",
"baseData":{"type":"variable",
"variableName":"inputA"
}
}
}
},
"matchersParms":{}
}
}]
}
},
"input":{"type":"mapping",
"name":"",
"description":"",
"info":{},
"definition":{"name":"",
"description":"",
"info":{},
"association":{"default":{"element":{"inputA.b.c":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"business",
"path":"a.aa"
},
"parent":"default"
}
},
"inputA.d.c":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"business",
"path":"a.aa"
},
"parent":"default"
}
},
"inputB":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"business",
"path":"a.aa"
},
"parent":"default"
}
},
"toVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"toVar"
},
"parent":"default"
}
},
"fromVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"fromVar"
},
"parent":"default"
}
}
}
}
}
},
"output":{"default":true
},
"input":{"default":false
},
"association":{"default":{"context":{"element":{"inputA.b.c":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"true",
"path":{"rootEleName":"business___public",
"path":"a.aa"
},
"parent":"default",
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
}
}
}
},
"inputA.d.c":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"true",
"path":{"rootEleName":"business___public",
"path":"a.aa"
},
"parent":"default",
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
}
}
}
},
"inputB":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"true",
"path":{"rootEleName":"business___public",
"path":"a.aa"
},
"parent":"default",
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
}
}
}
},
"toVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"true",
"path":{"rootEleName":"toVar___public"
},
"parent":"default",
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.integer;1.0.0",
"info":{}
}
}
}
},
"fromVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"true",
"path":{"rootEleName":"fromVar___public"
},
"parent":"default",
"definition":{"type":"data",
"processed":"true",
"criteria":{"status":"close",
"criteria":"test.integer;1.0.0",
"info":{}
}
}
}
}
}
},
"pathMapping":{"inputA.b.c":"default.public.business.a.aa",
"inputA.d.c":"default.public.business.a.aa",
"inputB":"default.public.business.a.aa",
"toVar":"default.public.toVar",
"fromVar":"default.public.fromVar"
},
"flatOutput":true,
"flatInput":{"default":"false"
},
"convertFunction":function(input, utilFunction){

	var output = {};

/*	
	//build element from inherited first
	if(false){
		if({default=false} && true){
			_.each(input, function(ele, name){
				output[name] = ele;
			});
		}
		else if(!{default=false} && !true){
			_.each(input, function(context, categary){
				_.each(context, function(ele, name){
					output[name] = ele;
				});
			});
		}		
		else if(!{default=false} && true){
			_.each(input, function(context, categary){
				_.each(context, function(ele, name){
					output[name] = ele;
					output[name+"___"+categary] = ele;
				});
			});
		}		
		else if({default=false} && !true){
			_.each(input, function(ele, name){
				var segs = name.split("___");
				if(segs.length==2){
					var context = output[segs[1]];
					if(context==undefined){
						context = {};
						output[segs[1]] = context;
					}
					context[segs[0]] = ele;
				}
			});
		}		
	}
*/
	
	//build skeleton first
	if(true){
		_.each({
  "inputA.b.c": {},
  "inputA.d.c": {},
  "inputB": {},
  "toVar": {},
  "fromVar": {}
}, function(value, name){
			output[name] = value;
		});
	}
	else{
		_.each({
  "inputA.b.c": {},
  "inputA.d.c": {},
  "inputB": {},
  "toVar": {},
  "fromVar": {}
}, function(context, categary){
			var context1 = output[categary];
			if(context1==undefined){
				context1 = {};
				output[categary] = context1;
			} 
			_.each(context, function(ele, name){
				context1[name] = ele;
			});
		});
	}
	
	//asign mapped element, leaf data
	output = utilFunction(output, ["inputA","b","c"], input, ["default","public","business","a","aa"]);
output = utilFunction(output, ["inputA","d","c"], input, ["default","public","business","a","aa"]);
output = utilFunction(output, ["inputB"], input, ["default","public","business","a","aa"]);
output = utilFunction(output, ["toVar"], input, ["default","public","toVar"]);
output = utilFunction(output, ["fromVar"], input, ["default","public","fromVar"]);

	
	return output;
}

}
}
},
"result":{"success":{"name":"success",
"description":"",
"info":{},
"dataAssociation":{"type":"mapping",
"name":"",
"description":"",
"info":{},
"definition":{"name":"",
"description":"",
"info":{},
"association":{"default":{"element":{"expressionResultVar":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"nosliw_output"
},
"parent":"default"
}
}
}
}
}
},
"output":{"default":false
},
"input":{"default":true
},
"association":{"default":{"context":{"element":{"expressionResultVar___protected":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"true",
"path":{"rootEleName":"nosliw_output"
},
"parent":"default",
"definition":{"type":"data",
"processed":"false",
"criteria":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
}
}
}
}
}
},
"pathMapping":{"protected.expressionResultVar":"default.nosliw_output"
},
"flatOutput":false,
"flatInput":{"default":"true"
},
"convertFunction":function(input, utilFunction){

	var output = {};

/*	
	//build element from inherited first
	if(false){
		if({default=true} && false){
			_.each(input, function(ele, name){
				output[name] = ele;
			});
		}
		else if(!{default=true} && !false){
			_.each(input, function(context, categary){
				_.each(context, function(ele, name){
					output[name] = ele;
				});
			});
		}		
		else if(!{default=true} && false){
			_.each(input, function(context, categary){
				_.each(context, function(ele, name){
					output[name] = ele;
					output[name+"___"+categary] = ele;
				});
			});
		}		
		else if({default=true} && !false){
			_.each(input, function(ele, name){
				var segs = name.split("___");
				if(segs.length==2){
					var context = output[segs[1]];
					if(context==undefined){
						context = {};
						output[segs[1]] = context;
					}
					context[segs[0]] = ele;
				}
			});
		}		
	}
*/
	
	//build skeleton first
	if(false){
		_.each({
  "protected": {
    "expressionResultVar": {}
  }
}, function(value, name){
			output[name] = value;
		});
	}
	else{
		_.each({
  "protected": {
    "expressionResultVar": {}
  }
}, function(context, categary){
			var context1 = output[categary];
			if(context1==undefined){
				context1 = {};
				output[categary] = context1;
			} 
			_.each(context, function(ele, name){
				context1[name] = ele;
			});
		});
	}
	
	//asign mapped element, leaf data
	output = utilFunction(output, ["protected","expressionResultVar"], input, ["default","nosliw_output"]);

	
	return output;
}

}
}
},
"flow":{"target":"successEndId"
}
}
},
"scriptExpression":{"definition":"#|!(test.string)!.subString(?(inputA)?.b.c,from:?(fromVar)?,to:?(toVar)?)|#",
"variableNames":["inputA.b.c","toVar","fromVar"],
"expressions":{"0":{"operand":{"type":"operation",
"outputCriteria":"test.string;1.0.0",
"operation":"subString",
"dataTypeId":"test.string;1.0.0",
"parms":{"from":{"type":"variable",
"outputCriteria":"test.integer;1.0.0",
"variableName":"fromVar"
},
"to":{"type":"variable",
"outputCriteria":"test.integer;1.0.0",
"variableName":"toVar"
},
"base":{"type":"variable",
"outputCriteria":"test.string;1.0.0",
"variableName":"inputA.b.c"
}
},
"matchersParms":{"base":{"test.string;1.0.0":{"dataTypeId":"test.string;1.0.0",
"relationship":{"source":"test.string;1.0.0",
"target":"test.string;1.0.0",
"path":[],
"targetType":"self"
},
"subMatchers":{},
"reverse":false
}
},
"from":{"test.integer;1.0.0":{"dataTypeId":"test.integer;1.0.0",
"relationship":{"source":"test.integer;1.0.0",
"target":"test.integer;1.0.0",
"path":[],
"targetType":"self"
},
"subMatchers":{},
"reverse":false
}
},
"to":{"test.integer;1.0.0":{"dataTypeId":"test.integer;1.0.0",
"relationship":{"source":"test.integer;1.0.0",
"target":"test.integer;1.0.0",
"path":[],
"targetType":"self"
},
"subMatchers":{},
"reverse":false
}
}
}
},
"variablesMatchers":{},
"variableInfos":{"inputA.b.c":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
},
"inputA.d.c":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
},
"inputB":{"status":"close",
"criteria":"test.string;1.0.0",
"info":{}
},
"toVar":{"status":"close",
"criteria":"test.integer;1.0.0",
"info":{}
},
"fromVar":{"status":"close",
"criteria":"test.integer;1.0.0",
"info":{}
}
}
}
}
},
"scriptExpressionScript":function(expressionsData, constantsData, variablesData){
	return expressionsData["0"];
} 

},
"successEndId":{"name":"successEnd",
"description":"",
"info":{},
"id":"successEndId",
"type":"end",
"definition":{"name":"successEnd",
"description":"",
"info":{},
"type":"end",
"output":{"name":"",
"description":"",
"info":{},
"association":{"default":{"element":{"output":{"name":"",
"description":"",
"info":{},
"definition":{"type":"relative",
"processed":"false",
"path":{"rootEleName":"expressionResultVar"
},
"parent":"default"
}
}
}
}
}
}
},
"resultName":"successEnd"
}
},
"initScript":function(input){

	var output = {
  "internal": {},
  "private": {},
  "public": {
    "business": {
      "a": {
        "aa": {
          "dataTypeId": "test.string;1.0.0",
          "value": "This is my world!"
        }
      }
    },
    "baseVar": {
      "dataTypeId": "test.string",
      "value": "This is my world!"
    },
    "toVar": {
      "dataTypeId": "test.integer;1.0.0",
      "value": 7
    },
    "fromVar": {
      "dataTypeId": "test.integer;1.0.0",
      "value": 3
    }
  },
  "protected": {}
};
	
	_.each(input, function(value, name){
		output.public[name] = value;
	});
	
	return output;
}

}, undefined, 
	{
		success : function(requestInfo, data){
			var parms = {};
			parms.taskId = "Task__ExecuteProcess__0";
			parms.responseData = data;
			nosliw.runtime.getGatewayService().executeGatewayCommand("taskResponseGateway", "success", parms);
		},
		error : function(requestInfo, serviceData){
			var parms = {};
			parms.taskId = "Task__ExecuteProcess__0";
			parms.responseData = serviceData;
			nosliw.runtime.getGatewayService().executeGatewayCommand("taskResponseGateway", "error", parms);
		},
		exception : function(requestInfo, serviceData){
			var parms = {};
			parms.taskId = "Task__ExecuteProcess__0";
			parms.responseData = serviceData;
			nosliw.runtime.getGatewayService().executeGatewayCommand("taskResponseGateway", "exception", parms);
		}
	}, undefined);		

